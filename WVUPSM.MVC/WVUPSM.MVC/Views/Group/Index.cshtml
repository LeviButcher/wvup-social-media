@model GroupViewModel


@{
    ViewData["Title"] = Model.GroupName;
}

<section class="section section-alt">
    <article class="profile-restrict">
        <header class="group-profile">
            <h1>@Model.GroupName</h1>
            <div>
                @if (Model.OwnerId.Equals(ViewBag.UserId))
                {
                    <form asp-controller="Group" asp-action="Delete" method="get" class="form">
                        <input type="submit" value="Delete" asp-controller="Group" asp-action="Delete" asp-route-groupId="@Model.GroupId" class="btn btn-danger" style="margin:auto; display:block; margin-top:5px" />
                    </form>
                }
            </div>
            <h4>Owner: <a asp-controller="User" asp-action="Index" asp-route-userId="@Model.OwnerId">@Model.OwnerUserName</a></h4>
        </header>

    </article>
</section>
<section>
    <nav>
        <ul class="profile-nav">
            <li class="@(ViewData["tab"].ToString() == "" ? "active":"")"><a class="profile_tab" asp-route-tab="">Posts</a></li>
            <li class="@(ViewData["tab"].ToString() == "Members" ? "active":"")"><a class="profile_tab" asp-route-tab="Members">Members: <span>@Model.MemberCount</span></a></li>
        </ul>
    </nav>
</section>
@if (ViewData["tab"].ToString() == "Members")
{
    @await Component.InvokeAsync("UserList", new { groupId = Model.GroupId })
}
else
{
    @await Component.InvokeAsync("PostFeed", new { groupId = Model.GroupId })
}
