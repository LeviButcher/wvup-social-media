@model Message

@{
    ViewData["Title"] = "My Inbox";
}

<section class="message-container">
    <section class="section message-list" data-currUser="@ViewData["currUser"]" data-otherUser="@ViewData["otherUser"]">
        @if(ViewBag.Messages != null)
        {
            foreach(MessageViewModel message in ViewBag.Messages)
            {
                await Html.RenderPartialAsync("_Message", message);
            }
        }
    </section>
    <section class="message-form">
        <form asp-action="Message">
            <textarea asp-for="Text" class="text-box" rows="4" placeholder="Send Message"></textarea>
            <input asp-for="SenderId" hidden/>
            <input asp-for="ReceiverId" hidden/>
            <input type="submit" class="btn btn-primary" value="Send" />
        </form>
    </section>
</section>

<script>
    window.onload = () => {
        const messageList = document.querySelector('.message-list');
        const action = "Message/Conversation";
        const otherUserId = messageList.dataset.otheruser;
        const startSkip = 20;
        const startTake = 20;
        scrollLoader(messageList, renderMessage, `${action}/${otherUserId}`, startSkip, startTake, true);
    }

    function renderMessage(data) {
        const messageList = document.querySelector('.message-list');
        let articleWrapper;
        let mainContent = `
                <header>
                    <h2>${data.senderUserName}</h2>
                </header>
                <p>
                    ${data.text}
                </p>
        `;

        if (data.senderId === messageList.dataset.curruser) {
            articleWrapper = `<article class="message message-reciever">${mainContent}</article>`;
        }
        else {
            articleWrapper = `<article class="message">${mainContent}</article>`;
        }

        return articleWrapper;
    }
</script>